{"version":3,"file":"static/js/245.4cce5935.chunk.js","mappings":"gUASaA,EAAa,WACxB,OAAiBC,EAAAA,EAAAA,MAAVC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,mCAAG,WAAMC,GAAN,oFACnBA,EAAMC,iBADa,kBAKPd,EAAO,CAAEM,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IALf,2BAIfK,KAAQC,EAJO,EAIPA,KAAMC,EAJC,EAIDA,MAJC,UAMXd,GAASe,EAAAA,EAAAA,IAAM,CAAEF,KAAAA,EAAMC,MAAAA,KANZ,QAOjBV,EAAQ,IACRE,EAAS,IACTE,EAAY,IACZV,EAAS,aAVQ,kDAYjBkB,EAAAA,GAAAA,MAAY,wBAZK,0DAAH,sDA0BlB,OACE,+BACE,UAAC,IAAD,CAAMC,SAAUR,EAAhB,WACE,SAAC,UAAD,qBACA,SAAC,YAAD,CACES,KAAK,OACLf,KAAK,OACLgB,MAAOhB,EACPiB,SAlBiB,SAAAV,GACvBN,EAAQM,EAAMW,cAAcF,QAkBtBG,YAAY,OACZC,UAAQ,EACRC,UAAU,YACV,aAAW,YAEb,SAAC,UAAD,sBACA,SAAC,YAAD,CACEN,KAAK,QACLf,KAAK,QACLgB,MAAOd,EACPe,SA1BkB,SAAAV,GACxBJ,EAASI,EAAMW,cAAcF,QA0BvBG,YAAY,QACZC,UAAQ,EACRC,UAAU,YACV,aAAW,YAEb,SAAC,UAAD,wBACA,SAAC,YAAD,CACEN,KAAK,WACLf,KAAK,WACLgB,MAAOZ,EACPa,SAlCqB,SAAAV,GAC3BF,EAAYE,EAAMW,cAAcF,QAkC1BG,YAAY,WACZC,UAAQ,EACRC,UAAU,YACV,aAAW,YAEb,SAAC,IAAD,CAAQC,QAAQ,kBAAkBP,KAAK,SAASM,UAAU,OAA1D,2BAQR","sources":["components/SignupView/SignupView.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSignupMutation } from 'services/authApi';\nimport { login } from 'redux/authSlice';\nimport { useNavigate } from 'react-router';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\nexport const SignupView = () => {\n  const [signup] = useSignupMutation();\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const {\n        data: { user, token },\n      } = await signup({ name, email, password });\n      await dispatch(login({ user, token }));\n      setName('');\n      setEmail('');\n      setPassword('');\n      navigate('/contacts');\n    } catch (error) {\n      toast.error('Something went wrong');\n    }\n  };\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n  const handleChangeEmail = event => {\n    setEmail(event.currentTarget.value);\n  };\n  const handleChangePassword = event => {\n    setPassword(event.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Label>Name </Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          placeholder=\"Name\"\n          required\n          className=\"me-2 w-25\"\n          aria-label=\"Search\"\n        />\n        <Form.Label>Email </Form.Label>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChangeEmail}\n          placeholder=\"Email\"\n          required\n          className=\"me-2 w-25\"\n          aria-label=\"Search\"\n        />\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChangePassword}\n          placeholder=\"Password\"\n          required\n          className=\"me-2 w-25\"\n          aria-label=\"Search\"\n        />\n        <Button variant=\"outline-success\" type=\"submit\" className='mt-2' >\n          Sign up\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupView;\n"],"names":["SignupView","useSignupMutation","signup","navigate","useNavigate","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","data","user","token","login","toast","onSubmit","type","value","onChange","currentTarget","placeholder","required","className","variant"],"sourceRoot":""}