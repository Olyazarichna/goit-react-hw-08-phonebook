{"version":3,"file":"static/js/131.98b7e3c1.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Contacts/Contacts.js"],"sourcesContent":["import {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'services/contactsApi';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [addContact] = useAddContactMutation();\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n  const handleChangeNumber = event => {\n    setNumber(event.target.value);\n  };\n\n  const haveContacts = values => {\n    const sameName = contacts.some(contactName => {\n      return contactName.name.toLowerCase() === values.name.toLowerCase();\n    });\n\n    return sameName;\n  };\n\n  const onHandleSubmit = event => {\n    event.preventDefault();\n    const values = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n    console.log('values', values);\n    if (haveContacts(values)) {\n      toast.success('This contact already exist !');\n      reset();\n      return;\n    } else {\n      toast.info('You add new contact !');\n      addContact(values);\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form className=\"d-flex\" onSubmit={onHandleSubmit}>\n        <Form.Label>Name </Form.Label>\n        <Form.Control\n          className=\"me-2 w-25\"\n          aria-label=\"Search\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChangeName}\n          placeholder=\"Enter name\"\n        />\n\n        <Form.Label>Number </Form.Label>\n        <Form.Control\n          className=\"me-2 w-25\"\n          aria-label=\"Search\"\n          onChange={handleChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          placeholder=\"Enter phone number\"\n        />\n\n        <Button variant=\"outline-success\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n      {/* w-25 */}\n      {/* <form onSubmit={onHandleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChangeName}\n            placeholder=\"Enter name\"\n          />\n        </label> */}\n      {/* <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChangeNumber}\n            placeholder=\"Enter phone number\"\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form> */}\n    </>\n  );\n};\n\nexport default ContactForm;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import { useDeleteContactMutation } from 'services/contactsApi';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport PropTypes from 'prop-types';\n\nexport const Contact = ({ id, name, number }) => {\n  const [deleteContact, result] = useDeleteContactMutation();\n  return (\n    <ListGroup.Item\n      variant=\"warning\"\n      className=\"d-flex p-1 justify-content-between\"\n    >\n      {name}: {number}\n      <Button\n        variant=\"warning\"\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        disabled={result.isLoading}\n      >\n        Delete\n      </Button>\n    </ListGroup.Item>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n\n};\nexport default Contact;\n","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { useGetContactsQuery } from 'services/contactsApi';\n\nexport const ContactList = () => {\n  const { data, error, isLoading } = useGetContactsQuery();\n  const { filter } = useSelector(state => state.filter);\n\n  const filterContacts = () => {\n    return data.filter(contactItem => {\n      return contactItem.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n  return (\n    <>\n      <ul className=\"d-flex flex-column justify-content-between w-25\">\n        {error ? (\n          <>Oh no, there was an error</>\n        ) : isLoading ? (\n          <>Loading...</>\n        ) : data ? (\n          filterContacts().map(contact => {\n            return (\n              <Contact\n                key={contact.id}\n                id={contact.id}\n                name={contact.name}\n                number={contact.number}\n              />\n            );\n          })\n        ) : null}\n      </ul>\n    </>\n  );\n};\nexport default ContactList;\n","import { filterContact } from 'redux/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const Filter = () => {\n  const { filter } = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  return (\n    <Form className=\"d-flex\">\n      <Form.Control\n        className=\"me-2 w-25\"\n        aria-label=\"Search\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={event => dispatch(filterContact(event.target.value))}\n        value={filter}\n        placeholder=\"Search\"\n      />\n      <Button variant=\"outline-success\">Search</Button>\n    </Form>\n    // <form>\n    //   <label>\n    //     Find contacts by name\n    //     <input\n    //       type=\"text\"\n    //       name=\"filter\"\n    //       onChange={event => dispatch(filterContact(event.target.value))}\n    //       value={filter}\n    //       placeholder=\"Search\"\n    //     />\n    //   </label>\n    // </form>\n  );\n};\nexport default Filter;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport Card from 'react-bootstrap/Card';\n\nexport const Contacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <Card.Title>Find contact by name</Card.Title>\n      <Filter />\n      <Card.Title>Contacts</Card.Title>\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","contacts","useGetContactsQuery","data","useState","name","setName","number","setNumber","useAddContactMutation","addContact","reset","Form","className","onSubmit","event","preventDefault","values","id","nanoid","console","log","some","contactName","toLowerCase","haveContacts","toast","type","pattern","title","required","value","onChange","target","placeholder","Button","variant","ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","Contact","useDeleteContactMutation","deleteContact","result","isLoading","ContactList","error","filter","useSelector","state","contactItem","includes","map","contact","Filter","dispatch","useDispatch","filterContact","Contacts","Card"],"sourceRoot":""}