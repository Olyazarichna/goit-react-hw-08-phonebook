{"version":3,"file":"static/js/721.279b9363.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Contacts/Contacts.js"],"sourcesContent":["import {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'services/contactsApi';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [addContact] = useAddContactMutation();\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n  const handleChangeNumber = event => {\n    setNumber(event.target.value);\n  };\n\n  const haveContacts = values => {\n    const sameName = contacts.some(contactName => {\n      return contactName.name.toLowerCase() === values.name.toLowerCase();\n    });\n\n    return sameName;\n  };\n\n  const onHandleSubmit = event => {\n    event.preventDefault();\n    const values = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n\n    if (haveContacts(values)) {\n      toast.info('This contact already exist !');\n      reset();\n      return;\n    } else {\n      toast.success('You add new contact !');\n      addContact(values);\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form className=\"d-flex mt-2\" onSubmit={onHandleSubmit}>\n        <Form.Label className='d-flex align-items-center m-0 my-2'>Name</Form.Label>\n        <Form.Control\n          className=\"me-2 w-25 mx-2\"\n          aria-label=\"Search\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChangeName}\n          placeholder=\"Enter name\"\n        />\n\n        <Form.Label className='d-flex align-items-center m-0'>Number </Form.Label>\n        <Form.Control\n          className=\"me-2 w-25 mx-2 \"\n          aria-label=\"Search\"\n          onChange={handleChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          placeholder=\"Enter phone number\"\n        />\n\n        <Button variant=\"outline-success\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n      {/* w-25 */}\n      {/* <form onSubmit={onHandleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChangeName}\n            placeholder=\"Enter name\"\n          />\n        </label> */}\n      {/* <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChangeNumber}\n            placeholder=\"Enter phone number\"\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form> */}\n    </>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Contact_avatar__899mE\"};","import { useDeleteContactMutation } from 'services/contactsApi';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { AvatarGenerator } from 'random-avatar-generator';\n\nexport const Contact = ({ id, name, number }) => {\n  const [deleteContact, result] = useDeleteContactMutation();\n\n  const generator = new AvatarGenerator();\n \n  return (\n    <li className='d-flex align-items-center mb-1 w-75 ' >\n      \n      <img src={generator.generateRandomAvatar()} className={css.avatar} alt='avatar'/>\n      <ListGroup.Item \n        variant=\"warning\"\n        className=\"d-flex p-1 align-items-center w-75 justify-content-between \"\n      >\n        {name}: {number}\n        <Button\n          variant=\"warning\"\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n          disabled={result.isLoading}\n        >\n          Delete\n        </Button>\n      </ListGroup.Item>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default Contact;\n","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { useGetContactsQuery } from 'services/contactsApi';\n\n\nexport const ContactList = () => {\n  const { data, error, isLoading } = useGetContactsQuery();\n  const { filter } = useSelector(state => state.filter);\n  // const  {token} = useSelector(state => state.auth);\n  // console.log('user', token)\n  const filterContacts = () => {\n    return data.filter(contactItem => {\n      return contactItem.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n  return (\n    <>\n\n      <ul className=\"d-flex flex-column w-75 p-0\">\n        {error ? (\n          <>Oh no, there was an error</>\n        ) : isLoading ? (\n          <>Loading...</>\n        ) : data ? (\n          filterContacts().map(contact => {\n            return (\n              <Contact\n                key={contact.id}\n                id={contact.id}\n                name={contact.name}\n                number={contact.number}\n              />\n            );\n          })\n        ) : null}\n      </ul>\n    </>\n  );\n};\nexport default ContactList;\n","import { filterContact } from 'redux/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const Filter = () => {\n  const { filter } = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  return (\n    <Form className=\"d-flex\">\n      <Form.Control\n        className=\"me-2 w-25\"\n        aria-label=\"Search\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={event => dispatch(filterContact(event.target.value))}\n        value={filter}\n        placeholder=\"Search\"\n      />\n      <Button variant=\"outline-success\">Search</Button>\n    </Form>\n    // <form>\n    //   <label>\n    //     Find contacts by name\n    //     <input\n    //       type=\"text\"\n    //       name=\"filter\"\n    //       onChange={event => dispatch(filterContact(event.target.value))}\n    //       value={filter}\n    //       placeholder=\"Search\"\n    //     />\n    //   </label>\n    // </form>\n  );\n};\nexport default Filter;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport Card from 'react-bootstrap/Card';\n\nexport const Contacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <Card.Title className='mt-4 my-2'>Find contact by name</Card.Title>\n      <Filter />\n      <Card.Title className='mt-4'>Contacts</Card.Title>\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","contacts","useGetContactsQuery","data","useState","name","setName","number","setNumber","useAddContactMutation","addContact","reset","Form","className","onSubmit","event","preventDefault","values","id","nanoid","some","contactName","toLowerCase","haveContacts","toast","type","pattern","title","required","value","onChange","target","placeholder","Button","variant","Contact","useDeleteContactMutation","deleteContact","result","generator","AvatarGenerator","src","generateRandomAvatar","css","alt","ListGroup","onClick","disabled","isLoading","ContactList","error","filter","useSelector","state","contactItem","includes","map","contact","Filter","dispatch","useDispatch","filterContact","Contacts","Card"],"sourceRoot":""}